const layout = {
  info: {
    layout: {
      developer: {
        comment: '',
        name: '',
      },
      image0: '',
      image1: '',
      name: '',
      version: '',
    },
    type: 'fixed',
    version: '2',
  },
  layout: {
    Key_0_AltGr: '',
    Key_0_Normal: '0',
    Key_1_AltGr: '',
    Key_1_Normal: '1',
    Key_2_AltGr: '',
    Key_2_Normal: '2',
    Key_3_AltGr: '',
    Key_3_Normal: '3',
    Key_4_AltGr: '',
    Key_4_Normal: '4',
    Key_5_AltGr: '',
    Key_5_Normal: '5',
    Key_6_AltGr: '',
    Key_6_Normal: '6',
    Key_7_AltGr: '',
    Key_7_Normal: '7',
    Key_8_AltGr: '',
    Key_8_Normal: '8',
    Key_9_AltGr: '',
    Key_9_Normal: '9',
    Key_A_AltGr: '',
    Key_A_Normal: 'A',
    Key_Ampersand_AltGr: '',
    Key_Ampersand_Normal: '&',
    Key_Apostrophe_AltGr: '',
    Key_Apostrophe_Normal: "'",
    Key_Asterisk_AltGr: '',
    Key_Asterisk_Normal: '*',
    Key_At_AltGr: '',
    Key_At_Normal: '@',
    Key_B_AltGr: '',
    Key_B_Normal: 'B',
    Key_BackSlash_AltGr: '',
    Key_BackSlash_Normal: '\\',
    Key_Bar_AltGr: '',
    Key_Bar_Normal: '|',
    Key_BraceLeft_AltGr: '',
    Key_BraceLeft_Normal: '{',
    Key_BraceRight_AltGr: '',
    Key_BraceRight_Normal: '}',
    Key_BracketLeft_AltGr: '',
    Key_BracketLeft_Normal: '[',
    Key_BracketRight_AltGr: '',
    Key_BracketRight_Normal: ']',
    Key_C_AltGr: '',
    Key_C_Normal: 'C',
    Key_Circum_AltGr: '',
    Key_Circum_Normal: '^',
    Key_Colon_AltGr: '',
    Key_Colon_Normal: ':',
    Key_Comma_AltGr: '',
    Key_Comma_Normal: ',',
    Key_D_AltGr: '',
    Key_D_Normal: 'D',
    Key_Dollar_AltGr: '',
    Key_Dollar_Normal: '$',
    Key_E_AltGr: '',
    Key_E_Normal: 'E',
    Key_Equals_AltGr: '',
    Key_Equals_Normal: '=',
    Key_Exclaim_AltGr: '',
    Key_Exclaim_Normal: '!',
    Key_F_AltGr: '',
    Key_F_Normal: 'F',
    Key_G_AltGr: '',
    Key_G_Normal: 'G',
    Key_Grave_AltGr: '',
    Key_Grave_Normal: '‌',
    Key_Greater_AltGr: '',
    Key_Greater_Normal: '>',
    Key_H_AltGr: '',
    Key_H_Normal: 'H',
    Key_Hash_AltGr: '',
    Key_Hash_Normal: '#',
    Key_I_AltGr: '',
    Key_I_Normal: 'I',
    Key_J_AltGr: '',
    Key_J_Normal: 'J',
    Key_K_AltGr: '',
    Key_K_Normal: 'K',
    Key_L_AltGr: '',
    Key_L_Normal: 'L',
    Key_Less_AltGr: '',
    Key_Less_Normal: '<',
    Key_M_AltGr: '',
    Key_M_Normal: 'M',
    Key_Minus_AltGr: '',
    Key_Minus_Normal: '-',
    Key_N_AltGr: '',
    Key_N_Normal: 'N',
    Key_O_AltGr: '',
    Key_O_Normal: 'O',
    Key_P_AltGr: '',
    Key_P_Normal: 'P',
    Key_ParenLeft_AltGr: '',
    Key_ParenLeft_Normal: '(',
    Key_ParenRight_AltGr: '',
    Key_ParenRight_Normal: ')',
    Key_Percent_AltGr: '',
    Key_Percent_Normal: '%',
    Key_Period_AltGr: '',
    Key_Period_Normal: '.',
    Key_Plus_AltGr: '',
    Key_Plus_Normal: '+',
    Key_Q_AltGr: '',
    Key_Q_Normal: 'Q',
    Key_Question_AltGr: '',
    Key_Question_Normal: '?',
    Key_Quote_AltGr: '',
    Key_Quote_Normal: '"',
    Key_R_AltGr: '',
    Key_R_Normal: 'R',
    Key_S_AltGr: '',
    Key_S_Normal: 'S',
    Key_Semicolon_AltGr: '',
    Key_Semicolon_Normal: ';',
    Key_Slash_AltGr: '',
    Key_Slash_Normal: '/',
    Key_T_AltGr: '',
    Key_T_Normal: 'T',
    Key_Tilde_AltGr: '',
    Key_Tilde_Normal: '‍',
    Key_U_AltGr: '',
    Key_U_Normal: 'U',
    Key_UnderScore_AltGr: '',
    Key_UnderScore_Normal: '_',
    Key_V_AltGr: '',
    Key_V_Normal: 'V',
    Key_W_AltGr: '',
    Key_W_Normal: 'W',
    Key_X_AltGr: '',
    Key_X_Normal: 'X',
    Key_Y_AltGr: '',
    Key_Y_Normal: 'Y',
    Key_Z_AltGr: '',
    Key_Z_Normal: 'Z',
    Key_a_AltGr: '',
    Key_a_Normal: 'a',
    Key_b_AltGr: '',
    Key_b_Normal: 'b',
    Key_c_AltGr: '',
    Key_c_Normal: 'c',
    Key_d_AltGr: '',
    Key_d_Normal: 'd',
    Key_e_AltGr: '',
    Key_e_Normal: 'e',
    Key_f_AltGr: '',
    Key_f_Normal: 'f',
    Key_g_AltGr: '',
    Key_g_Normal: 'g',
    Key_h_AltGr: '',
    Key_h_Normal: 'h',
    Key_i_AltGr: '',
    Key_i_Normal: 'i',
    Key_j_AltGr: '',
    Key_j_Normal: 'j',
    Key_k_AltGr: '',
    Key_k_Normal: 'k',
    Key_l_AltGr: '',
    Key_l_Normal: 'l',
    Key_m_AltGr: '',
    Key_m_Normal: 'm',
    Key_n_AltGr: '',
    Key_n_Normal: 'n',
    Key_o_AltGr: '',
    Key_o_Normal: 'o',
    Key_p_AltGr: '',
    Key_p_Normal: 'p',
    Key_q_AltGr: '',
    Key_q_Normal: 'q',
    Key_r_AltGr: '',
    Key_r_Normal: 'r',
    Key_s_AltGr: '',
    Key_s_Normal: 's',
    Key_t_AltGr: '',
    Key_t_Normal: 't',
    Key_u_AltGr: '',
    Key_u_Normal: 'u',
    Key_v_AltGr: '',
    Key_v_Normal: 'v',
    Key_w_AltGr: '',
    Key_w_Normal: 'w',
    Key_x_AltGr: '',
    Key_x_Normal: 'x',
    Key_y_AltGr: '',
    Key_y_Normal: 'y',
    Key_z_AltGr: '',
    Key_z_Normal: 'z',
    Num0: '0',
    Num1: '1',
    Num2: '2',
    Num3: '3',
    Num4: '4',
    Num5: '5',
    Num6: '6',
    Num7: '7',
    Num8: '8',
    Num9: '9',
    NumAdd: '+',
    NumDecimal: '.',
    NumDivide: '/',
    NumMultiply: '*',
    NumSubtract: '-',
  },
}

export type Layout = typeof layout
export const initialLayout = Object.freeze(layout) as Readonly<Layout>

export const isValidKey = (
  key: string
): key is keyof typeof initialLayout.layout => key in initialLayout.layout
